--- drivers/video/msm/vidc/common/init/vidc_init.c
+++ drivers/video/msm/vidc/common/init/vidc_init.c
@@ -403,7 +403,7 @@
 				enum buffer_dir buffer)
 {
 	u32 *num_of_buffers = NULL;
-	u32 i = 0;
+	u32 i = 0, len = 0;
 	struct buf_addr_table *buf_addr_table;
 	if (buffer == BUFFER_TYPE_INPUT) {
 		buf_addr_table = client_ctx->input_buf_addr_table;
@@ -446,6 +446,38 @@
 			}
 		}
 	}
+	len = sizeof(client_ctx->recon_buffer)/
+		sizeof(struct vcd_property_enc_recon_buffer);
+	for (i = 0; i < len; i++) {
+		if (!vcd_get_ion_status()) {
+			if (client_ctx->recon_buffer[i].client_data) {
+				msm_subsystem_unmap_buffer(
+				(struct msm_mapped_buffer *)
+				client_ctx->recon_buffer[i].client_data);
+				client_ctx->recon_buffer[i].client_data = NULL;
+			}
+		} else  {
+			if (!IS_ERR_OR_NULL(
+				client_ctx->recon_buffer_ion_handle[i])) {
+				ion_unmap_kernel(client_ctx->user_ion_client,
+				client_ctx->recon_buffer_ion_handle[i]);
+				if (!res_trk_check_for_sec_session() &&
+				   (res_trk_get_core_type() !=
+					(u32)VCD_CORE_720P)) {
+					ion_unmap_iommu(client_ctx->
+						user_ion_client,
+						client_ctx->
+						recon_buffer_ion_handle[i],
+						VIDEO_DOMAIN,
+						VIDEO_MAIN_POOL);
+				}
+				ion_free(client_ctx->user_ion_client,
+				client_ctx->recon_buffer_ion_handle[i]);
+				client_ctx->recon_buffer_ion_handle[i] = NULL;
+			}
+		}
+	}
+
 	if (client_ctx->vcd_h264_mv_buffer.client_data) {
 		msm_subsystem_unmap_buffer((struct msm_mapped_buffer *)
 		client_ctx->vcd_h264_mv_buffer.client_data);
